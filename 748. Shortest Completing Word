7ms 99%
代码有点长，但逻辑还是很清楚的
class Solution {
    int[] license = new int[26];

    public String shortestCompletingWord(String licensePlate, String[] words) {
        char[] ch = licensePlate.toCharArray();
        for (char c : ch) {
            int i = index(c);
            if (i == -1)
                continue;
            license[i]++;
        }
        String ans = "zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz";
        for (String str : words) {
            if (str.length() < ans.length() && match(str))
                ans = str;
        }
        return ans;
    }

    private int index(char c) {
        if (c >= 'a' && c <= 'z')
            return c - 'a';
        else if (c >= 'A' && c <= 'Z')
            return c - 'A';
        return -1;
    }

    private int[] toIntArray(char[] ch) {
        int[] ans = new int[26];
        for (char c : ch)
            ans[c - 'a']++;
        return ans;
    }

    private boolean match(String str) {
        int[] temp = toIntArray(str.toCharArray());
        for (int i = 0; i < 26; i++)
            if (temp[i] < license[i])
                return false;
        return true;
    }
}

答案中最快的，6ms
很有意思，将String转成了int，利用质数性质
class Solution {
    private static final int[] primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103}; 
    
    public String shortestCompletingWord(String licensePlate, String[] words) {
        long charProduct = getCharProduct(licensePlate.toLowerCase());
        String shortest = "zzzzzzzzzzzzzzzzzzzzzzzzzz";
        for(String word : words)
            if (word.length() < shortest.length() && getCharProduct(word) % charProduct == 0)
                    shortest = word;
        return shortest;
    }
    
    private long getCharProduct(String plate) {
        long product = 1L;
        for(char c : plate.toCharArray()) {
            int index = c - 'a';
            if (0 <= index && index <= 25) 
                product *= primes[index];
        }
        return product;
    }
}
