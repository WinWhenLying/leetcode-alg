1 0ms 100% 时间O(N)，空间O(1)

/*
    等于m*(m+1)*...*(m+n-2)/(1*2*...*(n-1)
 */
class Solution {
    public int uniquePaths(int m, int n) {
        long ans = 1;
        for (int i = 1; i < n; i++, m++) {
            ans = ans*m/i;
        }
        return (int)ans;
    }
}

动态规划
dp[i][j]：i*j的格子路径个数
因为只能向下或者向右，dp[i][j] = dp[i-1][j]+dp[i][j-1];
class Solution {
    public int uniquePaths(int m, int n) {
        int[][] dp =new int[m][n];
        for(int i=0;i<m;i++)
            dp[i][0]=1;
        for(int i=1;i<n;i++)
            dp[0][i]=1;
        for (int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                dp[i][j] = dp[i-1][j] + dp[i][j-1];
            }
        }
        return dp[m-1][n-1];
    }
}
