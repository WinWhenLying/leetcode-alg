https://leetcode.com/problems/maximum-subarray/description/

1 17ms 47.36% O(n) 
比我快的算法是一样的
/* 第i个数的最大连续子列和是 
 * nums[i]+nums[i-1] 与nums[i]之中的最大值
 * 一次遍历就OK了 
 */

class Solution {
    public int maxSubArray(int[] nums) {
        int maxSum = nums[0];
        for(int i=1;i<nums.length;i++) {
        	nums[i] = Math.max(nums[i], nums[i]+nums[i-1]);
        	if(nums[i] > maxSum) {
        		maxSum = nums[i];
        	}
        }
        return maxSum;
    }
}
