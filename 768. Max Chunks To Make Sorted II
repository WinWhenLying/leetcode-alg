https://leetcode.com/problems/max-chunks-to-make-sorted-ii/description/

1. 时间O（3n）,空间O（2n） 13ms 87.42%

class Solution {
    public int maxChunksToSorted(int[] arr) {
        int[] rightMin = new int[arr.length];
        rightMin[arr.length-1] = arr[arr.length-1];
        for(int i=arr.length-2;i>=0;i--) {
        	rightMin[i] = Math.min(rightMin[i+1], arr[i+1]);
        }
        int[] leftMax = new int[arr.length];
        leftMax[0] = arr[0];
        for(int i=1;i<arr.length;i++) {
        	leftMax[i] = Math.max(leftMax[i-1], arr[i]);
        }
        int ans=1;
        // 这里是避免了最后一个值的麻烦
        for(int i=0;i<arr.length-1;i++) {
        	if(leftMax[i] <= rightMin[i]) {
        		ans++;
        	}
        }
        return ans;
    }
}
