真的是不会
都是来自讨论区
// 这个算法比较好理解，但是比较慢
// booked这个值相当于从前往后，遇到一个新线段+1（就是一个start点，可能有多个线段，就+2...），遇到线段端点就减
// booked达到3就是有三条线段共范围，即false
class MyCalendarTwo {
    TreeMap<Integer,Integer> map;
    public MyCalendarTwo() {
        map = new TreeMap<Integer,Integer>();
    }

    public boolean book(int start, int end) {
        map.put(start, map.getOrDefault(start, 0) + 1);
        map.put(end, map.getOrDefault(end, 0) - 1);
        int booked = 0;
        for (Map.Entry<Integer,Integer> entry : map.entrySet()) {
            booked += entry.getValue();
            if (booked == 3) {
                map.put(start, map.get(start) - 1);
                map.put(end, map.get(end) + 1);
                return false;
            }
        }
        return true;
    }
}

还有一个算法是用线段树（segment tree）
