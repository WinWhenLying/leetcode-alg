看评论区的
一开始只能想到暴力算法，都懒得实现
评论区算法：
1. 求nums2中每个数的下一个最大值。
    一个辅助的stack, 从后往前遍历nums2，如果栈顶的数大于当前值，即为答案，栈空为-1，栈顶值小于当前值，pop()，再将当前值入栈。
    保证栈中的值都是i可能的下一个最大值
2. 值-下一个最大值构建一个map，遍历nums1直接访问这个map就得到答案了

class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        HashMap<Integer, Integer> mp = new HashMap<>(nums2.length);
        Stack<Integer> st = new Stack<>();
        for (int i = nums2.length - 1; i >= 0; i--) {
            while (!st.isEmpty() && st.peek() < nums2[i]) {
                st.pop();
            }
            if (st.isEmpty())
                mp.put(nums2[i], -1);
            else
                mp.put(nums2[i], st.peek());
            st.push(nums2[i]);
        }
        int[] nextGreater = new int[nums1.length];
        for (int i = 0; i < nums1.length; i++) {
            nextGreater[i] = mp.get(nums1[i]);
        }
        return nextGreater;
    }
}
