class Solution {
    public double largestSumOfAverages(int[] A, int K) {
        double[][] dp = new double[K][A.length];
        dp[0][0] = A[0];
        for (int i = 1; i < A.length; i++) {
            A[i] += A[i - 1];
            dp[0][i] = A[i] / (i + 1.0);
        }
        for (int i = 1; i < K; i++)
            dp[i][0] = A[0];
        for (int i = 1; i < K; i++) {
            for (int j = 1; j < A.length; j++) {
                for (int m = 0; m < j; m++) {
                    double current = dp[i - 1][m] + (A[j] - A[m]) / (j - m + 0.0);
                    if (current > dp[i][j])
                        dp[i][j] = current;
                }
            }
        }
        return dp[K - 1][A.length - 1];
    }

    public static void main(String[] args) {
        int[] A = {9, 1, 2, 3, 9};
        double b = new Solution().largestSumOfAverages(A, 3);
    }
}
